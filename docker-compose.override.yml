version: "3.8"

services:
  db:
    container_name: db
    image: postgres
    restart: on-failure
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - webnet
    expose:
      - 5432
    env_file: ./config/.env
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: '123123'
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    networks:
      - webnet
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"

  lib_employee: &lib_employee
    container_name: lib_employee
    env_file: ./config/lib_employee/.env
    build:
      target: development_build
      args:
        DJANGO_ENV: 'dev'
    volumes:
      - ./lib_employee:/code
      - ./config:/config
    environment:
      DJANGO_DEBUG: 1
      DATABASE_HOST: 'db'
    command: sh /runserver.sh


  lib_client: &lib_client
    container_name: lib_client
    env_file: ./config/lib_client/.env
    build:
      target: development_build
      args:
        DJANGO_ENV: 'dev'
    volumes:
      - ./lib_client:/code
      - ./config:/config
    environment:
      DJANGO_DEBUG: 1
      DATABASE_HOST: 'db'
    command: sh /runserver.sh


  mailhog:
    container_name: mailhog
    image: mailhog/mailhog:latest
    command: [ "-smtp-bind-addr", "0.0.0.0:25" ]
    user: root
    restart: on-failure
    networks:
      - webnet
      - nginx_network
    expose:
      - 25
      - 8025
    healthcheck:
      test: [ "CMD", "echo", "|", "telnet", "127.0.0.1 25" ]
      interval: 10s
      timeout: 5s
      retries: 5


  celery:
    <<: *lib_client
    container_name: celery
    environment:
      C_FORCE_ROOT: 'true'
      DATABASE_URL: 'postgresql://postgres:123123@db:5432/lib_client_db'
      DATABASE_HOST: 'db'
      DATABASE_PORT: '5432'
      REDIS_URL: 'redis://redis:6379/0'
      REDIS_CACHE: 'redis:6379'
      AMQP_URL: 'amqp://rabbitmq:5672'
      CHECK_WEB: 'true'
      WEB_HOST: 'lib_client'
      WEB_PORT: '8001'
    depends_on:
      - redis
      - db
    command: celery -A lib_client worker -B -l INFO


  nginx:
    container_name: nginx
    build:
      target: development_build
    ports:
      - 8025:8025
      - 5555:5555
    depends_on:
      - mailhog


volumes:
  db-data:
